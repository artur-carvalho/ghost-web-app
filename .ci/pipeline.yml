name: $(BuildDefinitionName).$(DayOfYear)$(Rev:.r)
trigger:
  batch: "true"
  branches:
    include:
      - main

pool:
  vmImage: "ubuntu-20.04"

variables: []

stages:
  - stage:
    jobs:
      - job: Terraform_Deploy
        displayName: "Terraform Deploy"
        steps:
          - task: TerraformInstaller@0
            displayName: "Install Terraform"
            inputs:
              terraformVersion: "1.0.11"

          - task: TerraformTaskV2@2
            displayName: "Terraform Init"
            inputs:
              provider: "azurerm"
              command: "init"
              backendServiceArm: ""
              backendAzureRmResourceGroupName: ""
              backendAzureRmStorageAccountName: ""
              backendAzureRmContainerName: "-"
              backendAzureRmKey: "terraform.state"
              workingDirectory: $(System.DefaultWorkingDirectory)/infrastructure/

          - task: TerraformTaskV2@2
            displayName: "Terraform Plan"
            inputs:
              provider: "azurerm"
              command: "plan"
              commandOptions: "-out infra_tfplan"
              environmentServiceNameAzureRM: ""
              workingDirectory: $(System.DefaultWorkingDirectory)/infrastructure/

# Apply only runs if branch is main
          - task: TerraformTaskV2@2
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            displayName: "Terraform Apply"
            inputs:
              provider: "azurerm"
              command: "apply"
              commandOptions: "-auto-approve -input=false infra_tfplan"
              environmentServiceNameAzureRM: ""
              workingDirectory: $(System.DefaultWorkingDirectory)/infrastructure/


# Deploy AKS Application
